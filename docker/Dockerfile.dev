# Start from the latest golang base image
FROM golang:latest as builder

# Add Maintainer Info
LABEL maintainer="Waldir Borba Junior <wborbajr@gmail.com>"

# ENV GO111MODULE=on

# Set the Current Working Directory inside the container
WORKDIR /telebot

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
# RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o telebotserver .
RUN CGO_ENABLED=0 GOOS=linux \
    go build --ldflags "-s -w" -a -installsuffix cgo \
    -v -o telebotserver .
#      && go test $(go list ./... | grep -v /vendor/) -cover

########
######## Start a new stage from scratch #######
##############
 FROM alpine:latest  

# Add non root user and certs
RUN apk --no-cache add ca-certificates  

WORKDIR /telebot

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /telebot/telebotserver ./

# Add docker-compose-wait tool -------------------
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.7.3/wait /wait

RUN chmod +x /wait

# Expose port 1406 to the outside world
ENV PORT=1406
EXPOSE 1406

# Command to run the executable
CMD ["./telebotserver"]
